7月19日上午学习了线程的创建，启动，特点等。通过官方的函数，可以选择动态或静态的创建线程，通过向函数里填入相关的值，可以初始化为自己想要的线程。通过上午的手动敲代码后，加深了线程的创建流程印象。在新建好工程之后呢，主函数中保留有呼吸灯程序，而且也是在一个while（1）的死循环里执行的，但是加上上午新建的线程后呢，（新线程是一个不加延时的while死循环），单片机任然可以变呼吸灯闪烁，边打印数据，实在是神奇！在我一贯的印象里，程序写下死循环后就会一直执行死循环，但操作系统可以让CPU不被限制在死循环里，跳出来执行别的任务，实在是神奇。同时上午的培训还让我深刻记住了rtt抢占式线程的特点：新创建的线程优先级低于主函数，而且写在一个不加让出CPU行为的死循环里，但因为主函数优先级更高，即使新线程未让出CPU使用权，主函数也依然可以拿到CPU使用权。同时在主函数里加入延时操作后，又可以保证主函数中执行完相应任务后，可以将CPU使用权还给低优先级的线程。